# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)'
    Contents: |
      **/*.dll
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
 
- task: DownloadBuildArtifacts@1
  inputs:
    buildType: 'current'
    downloadType: 'single'
    artifactName: 'drop'
    itemPattern: '**/bin/Release/net6.0/JenkinsWebApplicationDemo.dll'
    downloadPath: '$(Agent.WorkFolder)'

- task: Docker@2
  inputs:
    containerRegistry: 'docker'
    repository: 'poojajeeva/azuredotnet'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
    tags: |
      $(Build.BuildId)
      latest

# - task: KubernetesManifest@1
#   inputs:
#     action: 'deploy'
#     connectionType: 'kubernetesServiceConnection'
#     kubernetesServiceConnection: 'aks'
#     namespace: 'default'
#     manifests: 'deployment.yaml'  

- task: AzureCLI@2
  inputs:
    azureSubscription: 'Free Trial(e2e1700a-ebf0-4231-8c5d-f97bb318b6f4)'
    scriptType: 'pscore'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az aks get-credentials --resource-group myAKSRG --name myAKSCluster
      kubectl apply -f deployment.yaml


# - bash: |
#    kubectl apply -f kubernetes-deployment.yaml
   
#   workingDirectory: deployment.yaml
#   displayName: 'Bash Script'
